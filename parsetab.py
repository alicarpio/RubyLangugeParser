
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_OP CHOMP COLON COMA COMMENT DEF DIVIDE DO DOT ELSE ELSIF END EQ EQUALS FALSE FLOAT FOR GE GETS GT HASHROCKET IF IN INTEGER LBRACKET LE LPAREN LSQBRACKET LT MINUS MODULE MULTIPLY NAME NE NOT_OP NULL OR_OP PLUS POWER PUTS RBRACKET RETURN RPAREN RSQBRACKET STRING SYMBOL TRUE UNTIL VARIABLE_CONSTANTE VARIABLE_GLOBAL VARIABLE_INSTANCIA VARIABLE_LOCAL WHILEprogram : code_listcode_list : code\n                 | code code_listcode : variable_assignment\n            | impresion\n            | if_statement\n            | while_statement\n            | for_statement\n            | until_statement\n            | solicitud_entrada\n            | call_expression\n            | function_definitionvariable_assignment : NAME EQUALS valor\n                           | VARIABLE_GLOBAL EQUALS valor\n                           | VARIABLE_INSTANCIA EQUALS valor\n                           | VARIABLE_LOCAL EQUALS valor\n                           | VARIABLE_CONSTANTE EQUALS STRINGcall_expression : NAME LPAREN arguments_opt RPAREN\n                       | NAME DOT NAME LPAREN arguments_opt RPAREN\n                       | NAME DOT NAMEimpresion : PUTS arguments_optarguments_opt : argumentos_imp\n                    | emptyargumentos_imp : valor_puts\n                      | valor_puts COMA argumentos_impvalor_puts : operand\n                 | STRING\n                 | SYMBOL\n                 | boolean\n                 | lists\n                 | operation\n                 | condition\n                 | concatenar_strings\n                 | call_expressionsolicitud_entrada : PUTS STRING\n                         | NAME EQUALS GETS DOT CHOMP\n    argumentos : valor\n                  | valor COMA argumentosarguments_opt_func : arg_func\n                         | emptyarg_func : NAME\n                | NAME COMA arg_funcvalor : operand\n             | STRING\n             | NULL\n             | SYMBOL\n             | boolean\n             | lists\n             | operation\n             | condition\n             | concatenar_strings\n             | hash\n             | call_expressionoperand : INTEGER\n               | FLOAT\n               | NAMEoperatorArithm : MULTIPLY\n                | DIVIDE\n                | MODULEpower_op : INTEGER POWER INTEGERconcatenar_strings : STRING PLUS STRINGsum_of_integers : INTEGER PLUS INTEGERsubtraction_of_integers : INTEGER MINUS INTEGERlists : LBRACKET argumentos RBRACKET\n             | LSQBRACKET argumentos RSQBRACKEThash : LBRACKET pares_hash RBRACKET\n            | LBRACKET empty RBRACKETpares_hash : par_hash\n                  | par_hash COMA pares_hashpar_hash : clave HASHROCKET valor\n                | clave COLON valorclave : SYMBOL\n             | STRINGboolean : TRUE\n                | FALSEoperation : operand operatorArithm operand\n                 | sum_of_integers\n                 | subtraction_of_integers\n                 | operand operatorArithm operation\n    if_statement : IF condition statement_block END\n                 | IF condition statement_block ELSE statement_block END\n                 | IF condition statement_block ELSIF condition statement_block END\n                 | IF condition statement_block ELSIF condition statement_block ELSE statement_block ENDwhile_statement : WHILE condition statement_block ENDfor_statement : FOR NAME IN NAME DO statement_block ENDuntil_statement : UNTIL condition DO statement_block ENDcomparison_integer : INTEGER comparator INTEGERstatement_block : statement\n                       | statement statement_block statement : variable_assignment\n                  | impresion\n                  | if_statement\n                  | while_statement\n                  | returnreturn : RETURN argumentoscondition : comparison_integer\n                 | boolean\n                 | NOT_OP comparison_integer\n                 | comparison_integer operatorCond comparison_integeroperatorCond : AND_OP\n                    | OR_OPfunction_definition : DEF NAME LPAREN arguments_opt_func RPAREN body ENDcomparator : EQ\n                  | NE\n                  | LT\n                  | LE\n                  | GT\n                  | GEempty :\n    body : statement\n         | statement body\n    '
    
_lr_action_items = {'NAME':([0,3,4,5,6,7,8,9,10,11,12,18,21,23,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,85,86,87,88,89,100,105,107,108,109,110,111,112,114,115,117,118,119,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,155,156,157,159,160,162,164,165,166,167,168,174,175,180,181,182,183,184,187,],[13,13,-4,-5,-6,-7,-8,-9,-10,-11,-12,47,60,62,47,77,47,47,47,47,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,47,47,-77,-78,-96,113,-97,113,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,47,-20,-27,-14,-15,-16,-17,47,134,-57,-58,-59,-37,-98,113,-90,-91,-92,-93,-94,47,47,149,113,151,47,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,47,-65,-99,-80,113,47,-95,-84,-36,-66,-67,47,47,-38,113,113,-86,151,113,-19,-81,113,-82,113,-85,-102,-83,]),'VARIABLE_GLOBAL':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[14,14,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,14,-97,14,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,14,-90,-91,-92,-93,-94,-109,14,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,14,-95,-84,-36,-66,-67,-38,14,14,-86,14,-19,-81,14,-82,14,-85,-102,-83,]),'VARIABLE_INSTANCIA':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[15,15,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,15,-97,15,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,15,-90,-91,-92,-93,-94,-109,15,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,15,-95,-84,-36,-66,-67,-38,15,15,-86,15,-19,-81,15,-82,15,-85,-102,-83,]),'VARIABLE_LOCAL':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[16,16,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,16,-97,16,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,16,-90,-91,-92,-93,-94,-109,16,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,16,-95,-84,-36,-66,-67,-38,16,16,-86,16,-19,-81,16,-82,16,-85,-102,-83,]),'VARIABLE_CONSTANTE':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[17,17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,17,-97,17,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,17,-90,-91,-92,-93,-94,-109,17,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,17,-95,-84,-36,-66,-67,-38,17,17,-86,17,-19,-81,17,-82,17,-85,-102,-83,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,114,-97,114,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,114,-90,-91,-92,-93,-94,-109,114,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,114,-95,-84,-36,-66,-67,-38,114,114,-86,114,-19,-81,114,-82,114,-85,-102,-83,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[19,19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,19,-97,19,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,19,-90,-91,-92,-93,-94,-109,19,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,19,-95,-84,-36,-66,-67,-38,19,19,-86,19,-19,-81,19,-82,19,-85,-102,-83,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,155,156,157,162,164,165,166,168,174,175,180,181,182,183,184,187,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,20,-97,20,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,20,-90,-91,-92,-93,-94,-109,20,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,20,-95,-84,-36,-66,-67,-38,20,20,-86,20,-19,-81,20,-82,20,-85,-102,-83,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,105,128,129,130,131,132,133,134,135,136,137,138,140,141,142,148,155,156,157,166,174,175,181,183,184,187,],[21,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-98,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-84,-36,-66,-67,-86,-19,-81,-82,-85,-102,-83,]),'UNTIL':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,105,128,129,130,131,132,133,134,135,136,137,138,140,141,142,148,155,156,157,166,174,175,181,183,184,187,],[22,22,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-98,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-84,-36,-66,-67,-86,-19,-81,-82,-85,-102,-83,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,105,128,129,130,131,132,133,134,135,136,137,138,140,141,142,148,155,156,157,166,174,175,181,183,184,187,],[23,23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-98,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-84,-36,-66,-67,-86,-19,-81,-82,-85,-102,-83,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,18,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,105,128,129,130,131,132,133,134,135,136,137,138,140,141,142,148,155,156,157,166,174,175,181,183,184,187,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-109,-3,-21,-27,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-98,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-84,-36,-66,-67,-86,-19,-81,-82,-85,-102,-83,]),'EQUALS':([13,14,15,16,17,113,],[25,28,29,30,31,146,]),'LPAREN':([13,47,62,77,],[27,27,119,127,]),'DOT':([13,47,64,],[26,26,120,]),'STRING':([18,25,27,28,29,30,31,50,51,76,84,85,114,115,127,139,146,158,159,160,],[33,66,79,66,66,66,83,66,66,124,129,79,79,66,79,66,66,171,66,66,]),'SYMBOL':([18,25,27,28,29,30,50,51,76,85,114,115,127,139,146,158,159,160,],[38,68,38,68,68,68,68,68,125,38,38,68,38,68,68,170,68,68,]),'INTEGER':([18,19,20,22,25,27,28,29,30,50,51,55,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,102,103,104,114,115,127,139,144,146,159,160,],[45,58,58,58,45,45,45,45,45,45,45,58,45,45,133,-57,-58,-59,135,136,137,-103,-104,-105,-106,-107,-108,58,-100,-101,45,45,45,45,58,45,45,45,]),'FLOAT':([18,25,27,28,29,30,50,51,76,85,86,87,88,89,114,115,127,139,146,159,160,],[46,46,46,46,46,46,46,46,46,46,46,-57,-58,-59,46,46,46,46,46,46,46,]),'TRUE':([18,19,20,22,25,27,28,29,30,50,51,76,85,114,115,127,139,144,146,159,160,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'FALSE':([18,19,20,22,25,27,28,29,30,50,51,76,85,114,115,127,139,144,146,159,160,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LBRACKET':([18,25,27,28,29,30,50,51,76,85,114,115,127,139,146,159,160,],[50,76,50,76,76,76,76,76,76,50,50,76,50,76,76,76,76,]),'LSQBRACKET':([18,25,27,28,29,30,50,51,76,85,114,115,127,139,146,159,160,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'NOT_OP':([18,19,20,22,25,27,28,29,30,50,51,76,85,114,115,127,139,144,146,159,160,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'GETS':([25,],[64,]),'NULL':([25,28,29,30,50,51,76,115,139,146,159,160,],[67,67,67,67,67,67,67,67,67,67,67,67,]),'RPAREN':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,77,78,79,105,119,127,128,129,130,131,132,133,134,135,136,137,138,140,141,151,152,153,154,161,174,178,],[-109,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-20,128,-27,-98,-109,-109,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-41,168,-39,-40,174,-19,-42,]),'RETURN':([32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,56,57,59,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,107,108,109,110,111,112,114,118,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,147,148,156,157,162,164,165,168,174,175,180,181,182,187,],[-21,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,115,-97,115,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,115,-90,-91,-92,-93,-94,-109,115,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,115,-95,-84,-66,-67,-38,115,115,115,-19,-81,115,-82,115,-83,]),'END':([32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,106,107,108,109,110,111,112,114,116,128,129,130,131,132,133,134,135,136,137,138,140,141,142,145,147,148,150,156,157,162,163,174,175,176,177,179,180,181,185,186,187,],[-21,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,142,-88,-90,-91,-92,-93,-94,-109,148,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-89,-95,-84,166,-66,-67,-38,175,-19,-81,181,183,184,-110,-82,-111,187,-83,]),'ELSE':([32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,106,107,108,109,110,111,112,114,128,129,130,131,132,133,134,135,136,137,138,140,141,142,145,147,148,156,157,162,174,175,176,181,187,],[-21,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,143,-88,-90,-91,-92,-93,-94,-109,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-89,-95,-84,-66,-67,-38,-19,-81,182,-82,-83,]),'ELSIF':([32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,63,65,66,67,68,69,70,71,72,73,74,75,77,79,80,81,82,83,100,105,106,107,108,109,110,111,112,114,128,129,130,131,132,133,134,135,136,137,138,140,141,142,145,147,148,156,157,162,174,175,181,187,],[-21,-22,-23,-24,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-13,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,-14,-15,-16,-17,-37,-98,144,-88,-90,-91,-92,-93,-94,-109,-18,-61,-25,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-80,-89,-95,-84,-66,-67,-38,-19,-81,-82,-83,]),'COMA':([33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,65,66,67,68,69,70,71,72,73,74,75,77,79,100,105,123,124,125,128,129,131,132,133,134,135,136,137,138,140,141,151,156,157,172,173,174,],[-27,85,-26,-28,-29,-30,-31,-32,-33,-34,-54,-55,-56,-74,-75,-77,-78,-96,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-27,139,-98,158,-44,-46,-18,-61,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,167,-66,-67,-70,-71,-19,]),'PLUS':([33,45,66,79,124,133,],[84,90,84,84,84,90,]),'MULTIPLY':([37,45,46,47,65,131,133,134,],[87,-54,-55,-56,87,87,-54,-56,]),'DIVIDE':([37,45,46,47,65,131,133,134,],[88,-54,-55,-56,88,88,-54,-56,]),'MODULE':([37,45,46,47,65,131,133,134,],[89,-54,-55,-56,89,89,-54,-56,]),'RBRACKET':([45,46,47,48,49,52,53,54,65,66,67,68,69,70,71,72,73,74,75,76,77,99,100,105,121,122,123,124,125,128,129,131,132,133,134,135,136,137,138,140,141,156,157,162,169,172,173,174,],[-54,-55,-56,-74,-75,-77,-78,-96,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-109,-20,138,-37,-98,156,157,-68,-44,-46,-18,-61,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-66,-67,-38,-69,-70,-71,-19,]),'RSQBRACKET':([45,46,47,48,49,52,53,54,65,66,67,68,69,70,71,72,73,74,75,77,100,101,105,128,129,131,132,133,134,135,136,137,138,140,141,156,157,162,174,],[-54,-55,-56,-74,-75,-77,-78,-96,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-20,-37,140,-98,-18,-61,-76,-79,-54,-56,-62,-63,-87,-64,-65,-99,-66,-67,-38,-19,]),'MINUS':([45,133,],[91,91,]),'EQ':([45,58,],[93,93,]),'NE':([45,58,],[94,94,]),'LT':([45,58,],[95,95,]),'LE':([45,58,],[96,96,]),'GT':([45,58,],[97,97,]),'GE':([45,58,],[98,98,]),'DO':([48,49,54,57,61,105,137,141,149,],[-74,-75,-96,-97,118,-98,-87,-99,165,]),'AND_OP':([54,137,],[103,-87,]),'OR_OP':([54,137,],[104,-87,]),'IN':([60,],[117,]),'CHOMP':([120,],[155,]),'HASHROCKET':([124,125,126,170,171,],[-73,-72,159,-72,-73,]),'COLON':([124,125,126,170,171,],[-73,-72,160,-72,-73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'code_list':([0,3,],[2,24,]),'code':([0,3,],[3,3,]),'variable_assignment':([0,3,56,59,107,118,143,164,165,168,180,182,],[4,4,108,108,108,108,108,108,108,108,108,108,]),'impresion':([0,3,56,59,107,118,143,164,165,168,180,182,],[5,5,109,109,109,109,109,109,109,109,109,109,]),'if_statement':([0,3,56,59,107,118,143,164,165,168,180,182,],[6,6,110,110,110,110,110,110,110,110,110,110,]),'while_statement':([0,3,56,59,107,118,143,164,165,168,180,182,],[7,7,111,111,111,111,111,111,111,111,111,111,]),'for_statement':([0,3,],[8,8,]),'until_statement':([0,3,],[9,9,]),'solicitud_entrada':([0,3,],[10,10,]),'call_expression':([0,3,18,25,27,28,29,30,50,51,76,85,114,115,127,139,146,159,160,],[11,11,44,75,44,75,75,75,75,75,75,44,44,75,44,75,75,75,75,]),'function_definition':([0,3,],[12,12,]),'arguments_opt':([18,27,114,127,],[32,78,32,161,]),'argumentos_imp':([18,27,85,114,127,],[34,34,130,34,34,]),'empty':([18,27,76,114,119,127,],[35,35,122,35,154,35,]),'valor_puts':([18,27,85,114,127,],[36,36,36,36,36,]),'operand':([18,25,27,28,29,30,50,51,76,85,86,114,115,127,139,146,159,160,],[37,65,37,65,65,65,65,65,65,37,131,37,65,37,65,65,65,65,]),'boolean':([18,19,20,22,25,27,28,29,30,50,51,76,85,114,115,127,139,144,146,159,160,],[39,57,57,57,69,39,69,69,69,69,69,69,39,39,69,39,69,57,69,69,69,]),'lists':([18,25,27,28,29,30,50,51,76,85,114,115,127,139,146,159,160,],[40,70,40,70,70,70,70,70,70,40,40,70,40,70,70,70,70,]),'operation':([18,25,27,28,29,30,50,51,76,85,86,114,115,127,139,146,159,160,],[41,71,41,71,71,71,71,71,71,41,132,41,71,41,71,71,71,71,]),'condition':([18,19,20,22,25,27,28,29,30,50,51,76,85,114,115,127,139,144,146,159,160,],[42,56,59,61,72,42,72,72,72,72,72,72,42,42,72,42,72,164,72,72,72,]),'concatenar_strings':([18,25,27,28,29,30,50,51,76,85,114,115,127,139,146,159,160,],[43,73,43,73,73,73,73,73,73,43,43,73,43,73,73,73,73,]),'sum_of_integers':([18,25,27,28,29,30,50,51,76,85,86,114,115,127,139,146,159,160,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'subtraction_of_integers':([18,25,27,28,29,30,50,51,76,85,86,114,115,127,139,146,159,160,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'comparison_integer':([18,19,20,22,25,27,28,29,30,50,51,55,76,85,102,114,115,127,139,144,146,159,160,],[54,54,54,54,54,54,54,54,54,54,54,105,54,54,141,54,54,54,54,54,54,54,54,]),'valor':([25,28,29,30,50,51,76,115,139,146,159,160,],[63,80,81,82,100,100,100,100,100,63,172,173,]),'hash':([25,28,29,30,50,51,76,115,139,146,159,160,],[74,74,74,74,74,74,74,74,74,74,74,74,]),'operatorArithm':([37,65,131,],[86,86,86,]),'comparator':([45,58,],[92,92,]),'argumentos':([50,51,76,115,139,],[99,101,99,147,162,]),'operatorCond':([54,],[102,]),'statement_block':([56,59,107,118,143,164,165,182,],[106,116,145,150,163,176,177,186,]),'statement':([56,59,107,118,143,164,165,168,180,182,],[107,107,107,107,107,107,107,180,180,107,]),'return':([56,59,107,118,143,164,165,168,180,182,],[112,112,112,112,112,112,112,112,112,112,]),'pares_hash':([76,158,],[121,169,]),'par_hash':([76,158,],[123,123,]),'clave':([76,158,],[126,126,]),'arguments_opt_func':([119,],[152,]),'arg_func':([119,167,],[153,178,]),'body':([168,180,],[179,185,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code_list','program',1,'p_program','Syntactic.py',14),
  ('code_list -> code','code_list',1,'p_code_list','Syntactic.py',17),
  ('code_list -> code code_list','code_list',2,'p_code_list','Syntactic.py',18),
  ('code -> variable_assignment','code',1,'p_code','Syntactic.py',21),
  ('code -> impresion','code',1,'p_code','Syntactic.py',22),
  ('code -> if_statement','code',1,'p_code','Syntactic.py',23),
  ('code -> while_statement','code',1,'p_code','Syntactic.py',24),
  ('code -> for_statement','code',1,'p_code','Syntactic.py',25),
  ('code -> until_statement','code',1,'p_code','Syntactic.py',26),
  ('code -> solicitud_entrada','code',1,'p_code','Syntactic.py',27),
  ('code -> call_expression','code',1,'p_code','Syntactic.py',28),
  ('code -> function_definition','code',1,'p_code','Syntactic.py',29),
  ('variable_assignment -> NAME EQUALS valor','variable_assignment',3,'p_variable_assignment','Syntactic.py',32),
  ('variable_assignment -> VARIABLE_GLOBAL EQUALS valor','variable_assignment',3,'p_variable_assignment','Syntactic.py',33),
  ('variable_assignment -> VARIABLE_INSTANCIA EQUALS valor','variable_assignment',3,'p_variable_assignment','Syntactic.py',34),
  ('variable_assignment -> VARIABLE_LOCAL EQUALS valor','variable_assignment',3,'p_variable_assignment','Syntactic.py',35),
  ('variable_assignment -> VARIABLE_CONSTANTE EQUALS STRING','variable_assignment',3,'p_variable_assignment','Syntactic.py',36),
  ('call_expression -> NAME LPAREN arguments_opt RPAREN','call_expression',4,'p_call_expression','Syntactic.py',41),
  ('call_expression -> NAME DOT NAME LPAREN arguments_opt RPAREN','call_expression',6,'p_call_expression','Syntactic.py',42),
  ('call_expression -> NAME DOT NAME','call_expression',3,'p_call_expression','Syntactic.py',43),
  ('impresion -> PUTS arguments_opt','impresion',2,'p_impresion','Syntactic.py',46),
  ('arguments_opt -> argumentos_imp','arguments_opt',1,'p_arguments_opt','Syntactic.py',49),
  ('arguments_opt -> empty','arguments_opt',1,'p_arguments_opt','Syntactic.py',50),
  ('argumentos_imp -> valor_puts','argumentos_imp',1,'p_argumentos_imp','Syntactic.py',53),
  ('argumentos_imp -> valor_puts COMA argumentos_imp','argumentos_imp',3,'p_argumentos_imp','Syntactic.py',54),
  ('valor_puts -> operand','valor_puts',1,'p_valor_puts','Syntactic.py',57),
  ('valor_puts -> STRING','valor_puts',1,'p_valor_puts','Syntactic.py',58),
  ('valor_puts -> SYMBOL','valor_puts',1,'p_valor_puts','Syntactic.py',59),
  ('valor_puts -> boolean','valor_puts',1,'p_valor_puts','Syntactic.py',60),
  ('valor_puts -> lists','valor_puts',1,'p_valor_puts','Syntactic.py',61),
  ('valor_puts -> operation','valor_puts',1,'p_valor_puts','Syntactic.py',62),
  ('valor_puts -> condition','valor_puts',1,'p_valor_puts','Syntactic.py',63),
  ('valor_puts -> concatenar_strings','valor_puts',1,'p_valor_puts','Syntactic.py',64),
  ('valor_puts -> call_expression','valor_puts',1,'p_valor_puts','Syntactic.py',65),
  ('solicitud_entrada -> PUTS STRING','solicitud_entrada',2,'p_solicitud_entrada','Syntactic.py',68),
  ('solicitud_entrada -> NAME EQUALS GETS DOT CHOMP','solicitud_entrada',5,'p_solicitud_entrada','Syntactic.py',69),
  ('argumentos -> valor','argumentos',1,'p_argumentos','Syntactic.py',73),
  ('argumentos -> valor COMA argumentos','argumentos',3,'p_argumentos','Syntactic.py',74),
  ('arguments_opt_func -> arg_func','arguments_opt_func',1,'p_arguments_opt_func','Syntactic.py',77),
  ('arguments_opt_func -> empty','arguments_opt_func',1,'p_arguments_opt_func','Syntactic.py',78),
  ('arg_func -> NAME','arg_func',1,'p_arg_func','Syntactic.py',81),
  ('arg_func -> NAME COMA arg_func','arg_func',3,'p_arg_func','Syntactic.py',82),
  ('valor -> operand','valor',1,'p_valor','Syntactic.py',85),
  ('valor -> STRING','valor',1,'p_valor','Syntactic.py',86),
  ('valor -> NULL','valor',1,'p_valor','Syntactic.py',87),
  ('valor -> SYMBOL','valor',1,'p_valor','Syntactic.py',88),
  ('valor -> boolean','valor',1,'p_valor','Syntactic.py',89),
  ('valor -> lists','valor',1,'p_valor','Syntactic.py',90),
  ('valor -> operation','valor',1,'p_valor','Syntactic.py',91),
  ('valor -> condition','valor',1,'p_valor','Syntactic.py',92),
  ('valor -> concatenar_strings','valor',1,'p_valor','Syntactic.py',93),
  ('valor -> hash','valor',1,'p_valor','Syntactic.py',94),
  ('valor -> call_expression','valor',1,'p_valor','Syntactic.py',95),
  ('operand -> INTEGER','operand',1,'p_operand','Syntactic.py',99),
  ('operand -> FLOAT','operand',1,'p_operand','Syntactic.py',100),
  ('operand -> NAME','operand',1,'p_operand','Syntactic.py',101),
  ('operatorArithm -> MULTIPLY','operatorArithm',1,'p_operatorArithm','Syntactic.py',112),
  ('operatorArithm -> DIVIDE','operatorArithm',1,'p_operatorArithm','Syntactic.py',113),
  ('operatorArithm -> MODULE','operatorArithm',1,'p_operatorArithm','Syntactic.py',114),
  ('power_op -> INTEGER POWER INTEGER','power_op',3,'p_power_op','Syntactic.py',117),
  ('concatenar_strings -> STRING PLUS STRING','concatenar_strings',3,'p_concatenar_strings','Syntactic.py',120),
  ('sum_of_integers -> INTEGER PLUS INTEGER','sum_of_integers',3,'p_sum_of_integers','Syntactic.py',123),
  ('subtraction_of_integers -> INTEGER MINUS INTEGER','subtraction_of_integers',3,'p_subtraction_of_integers','Syntactic.py',126),
  ('lists -> LBRACKET argumentos RBRACKET','lists',3,'p_lists','Syntactic.py',129),
  ('lists -> LSQBRACKET argumentos RSQBRACKET','lists',3,'p_lists','Syntactic.py',130),
  ('hash -> LBRACKET pares_hash RBRACKET','hash',3,'p_hash','Syntactic.py',133),
  ('hash -> LBRACKET empty RBRACKET','hash',3,'p_hash','Syntactic.py',134),
  ('pares_hash -> par_hash','pares_hash',1,'p_pares_hash','Syntactic.py',137),
  ('pares_hash -> par_hash COMA pares_hash','pares_hash',3,'p_pares_hash','Syntactic.py',138),
  ('par_hash -> clave HASHROCKET valor','par_hash',3,'p_par_hash','Syntactic.py',141),
  ('par_hash -> clave COLON valor','par_hash',3,'p_par_hash','Syntactic.py',142),
  ('clave -> SYMBOL','clave',1,'p_clave','Syntactic.py',147),
  ('clave -> STRING','clave',1,'p_clave','Syntactic.py',148),
  ('boolean -> TRUE','boolean',1,'p_boolean','Syntactic.py',152),
  ('boolean -> FALSE','boolean',1,'p_boolean','Syntactic.py',153),
  ('operation -> operand operatorArithm operand','operation',3,'p_operation','Syntactic.py',157),
  ('operation -> sum_of_integers','operation',1,'p_operation','Syntactic.py',158),
  ('operation -> subtraction_of_integers','operation',1,'p_operation','Syntactic.py',159),
  ('operation -> operand operatorArithm operation','operation',3,'p_operation','Syntactic.py',160),
  ('if_statement -> IF condition statement_block END','if_statement',4,'p_if_statement','Syntactic.py',165),
  ('if_statement -> IF condition statement_block ELSE statement_block END','if_statement',6,'p_if_statement','Syntactic.py',166),
  ('if_statement -> IF condition statement_block ELSIF condition statement_block END','if_statement',7,'p_if_statement','Syntactic.py',167),
  ('if_statement -> IF condition statement_block ELSIF condition statement_block ELSE statement_block END','if_statement',9,'p_if_statement','Syntactic.py',168),
  ('while_statement -> WHILE condition statement_block END','while_statement',4,'p_while_statement','Syntactic.py',171),
  ('for_statement -> FOR NAME IN NAME DO statement_block END','for_statement',7,'p_for_statement','Syntactic.py',174),
  ('until_statement -> UNTIL condition DO statement_block END','until_statement',5,'p_until_statement','Syntactic.py',177),
  ('comparison_integer -> INTEGER comparator INTEGER','comparison_integer',3,'p_comparison_integer','Syntactic.py',181),
  ('statement_block -> statement','statement_block',1,'p_statement_block','Syntactic.py',185),
  ('statement_block -> statement statement_block','statement_block',2,'p_statement_block','Syntactic.py',186),
  ('statement -> variable_assignment','statement',1,'p_statement','Syntactic.py',190),
  ('statement -> impresion','statement',1,'p_statement','Syntactic.py',191),
  ('statement -> if_statement','statement',1,'p_statement','Syntactic.py',192),
  ('statement -> while_statement','statement',1,'p_statement','Syntactic.py',193),
  ('statement -> return','statement',1,'p_statement','Syntactic.py',194),
  ('return -> RETURN argumentos','return',2,'p_return','Syntactic.py',197),
  ('condition -> comparison_integer','condition',1,'p_condition','Syntactic.py',200),
  ('condition -> boolean','condition',1,'p_condition','Syntactic.py',201),
  ('condition -> NOT_OP comparison_integer','condition',2,'p_condition','Syntactic.py',202),
  ('condition -> comparison_integer operatorCond comparison_integer','condition',3,'p_condition','Syntactic.py',203),
  ('operatorCond -> AND_OP','operatorCond',1,'p_operatorCond','Syntactic.py',206),
  ('operatorCond -> OR_OP','operatorCond',1,'p_operatorCond','Syntactic.py',207),
  ('function_definition -> DEF NAME LPAREN arguments_opt_func RPAREN body END','function_definition',7,'p_function_definition','Syntactic.py',210),
  ('comparator -> EQ','comparator',1,'p_comparator','Syntactic.py',213),
  ('comparator -> NE','comparator',1,'p_comparator','Syntactic.py',214),
  ('comparator -> LT','comparator',1,'p_comparator','Syntactic.py',215),
  ('comparator -> LE','comparator',1,'p_comparator','Syntactic.py',216),
  ('comparator -> GT','comparator',1,'p_comparator','Syntactic.py',217),
  ('comparator -> GE','comparator',1,'p_comparator','Syntactic.py',218),
  ('empty -> <empty>','empty',0,'p_empty','Syntactic.py',221),
  ('body -> statement','body',1,'p_body','Syntactic.py',226),
  ('body -> statement body','body',2,'p_body','Syntactic.py',227),
]
