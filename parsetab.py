
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_OP CASE CLASS CLASS_NAME COLON COMA COMMENT DEF DIVIDE DO DOT EACH ELSE ELSIF END EQ EQUALS FALSE FLOAT FOR GE GT HASHROCKET IF INITIALIZE INTEGER LBRACKET LE LPAREN LSQBRACKET LT METHOD_NAME MINUS MODULE MULTIPLY NE NEW NOT_OP NULL OR_OP PIPE PLUS POWER PUTS RBRACKET RPAREN RSQBRACKET SEMICOLON STRING SYMBOL TRUE UNLESS UNTIL VARIABLE_CLASE VARIABLE_CONSTANTE VARIABLE_GLOBAL VARIABLE_INSTANCIA VARIABLE_LOCAL VARIABLE_NAME WHEN WHILEasignacion : VARIABLE_LOCAL EQUALS valorvalor : STRING\n             | INTEGER\n             | FLOAT\n             | VARIABLE_LOCAL'
    
_lr_action_items = {'VARIABLE_LOCAL':([0,3,],[2,4,]),'$end':([1,4,5,6,7,8,],[0,-5,-1,-2,-3,-4,]),'EQUALS':([2,],[3,]),'STRING':([3,],[6,]),'INTEGER':([3,],[7,]),'FLOAT':([3,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([0,],[1,]),'valor':([3,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> asignacion","S'",1,None,None,None),
  ('asignacion -> VARIABLE_LOCAL EQUALS valor','asignacion',3,'p_asignacion','Syntactic.py',5),
  ('valor -> STRING','valor',1,'p_valor','Syntactic.py',9),
  ('valor -> INTEGER','valor',1,'p_valor','Syntactic.py',10),
  ('valor -> FLOAT','valor',1,'p_valor','Syntactic.py',11),
  ('valor -> VARIABLE_LOCAL','valor',1,'p_valor','Syntactic.py',12),
]
