
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_OP CHOMP CLASS CLASS_NAME COLON COMA COMMENT DEF DIVIDE DO DOT EACH ELSE ELSIF END EQ EQUALS FALSE FLOAT FOR GE GETS GT HASHROCKET IF IN INITIALIZE INTEGER LBRACKET LE LPAREN LSQBRACKET LT MINUS MODULE MULTIPLY NAME NE NEW NEWLINE NOT_OP NULL OR_OP PIPE PLUS POWER PUTS RBRACKET RETURN RPAREN RSQBRACKET SEMICOLON STRING SYMBOL TRUE UNTIL VARIABLE_CLASE VARIABLE_CONSTANTE VARIABLE_GLOBAL VARIABLE_INSTANCIA VARIABLE_LOCAL WHILEprogram : code_listcode_list : code\n                 | code code_listcode : asignacion\n            | impresion\n            | if_statement\n            | while_statement\n            | for_statement\n            | until_statement\n            | instantiation\n            | solicitud_entrada\n            | call_expression\n            | function_definition\n            | class_definitionvariable_assignment : NAME EQUALS expression\n                           | VARIABLE_GLOBAL EQUALS expression\n                           | VARIABLE_CLASE EQUALS expression\n                           | VARIABLE_INSTANCIA EQUALS expression\n                           | VARIABLE_LOCAL EQUALS expression\n                           | VARIABLE_CONSTANTE EQUALS expressionasignacion : NAME EQUALS valor\n                  | VARIABLE_GLOBAL EQUALS valor\n                  | VARIABLE_CLASE EQUALS valor\n                  | VARIABLE_INSTANCIA EQUALS valor\n                  | VARIABLE_LOCAL EQUALS valorcall_expression : NAME LPAREN arguments_opt RPAREN\n                       | NAME DOT NAME LPAREN arguments_opt RPAREN\n                       | NAME DOT NAMEimpresion : PUTS arguments_optsolicitud_entrada : PUTS STRING\n                         | NAME EQUALS GETS DOT CHOMP\n    arguments_opt : argumentos\n                      | emptyargumentos : valor\n                  | valor COMA argumentosvalor : operand\n             | STRING\n             | NULL\n             | SYMBOL\n             | boolean\n             | lists\n             | operation\n             | condition\n             | expression\n             | hash\n             | call_expressionexpression : expression operatorArithm operand\n                  | operandoperand : INTEGER\n               | FLOAT\n               | NAMEoperatorArithm : PLUS\n                | MINUS\n                | MULTIPLY\n                | DIVIDE\n                | MODULE\n                power_op : INTEGER POWER INTEGERlists : LBRACKET argumentos RBRACKET\n             | LSQBRACKET argumentos RSQBRACKEThash : LBRACKET pares_hash RBRACKET\n            | LBRACKET empty RBRACKETpares_hash : par_hash\n                  | par_hash COMA pares_hashpar_hash : clave HASHROCKET valor\n                | clave COLON valorclave : SYMBOL\n             | STRINGboolean : TRUE\n                | FALSEoperation : operand operatorArithm operand\n                 | operand operatorArithm operation\n    if_statement : IF condition statement_block END\n                 | IF condition statement_block ELSE statement_block END\n                 | IF condition statement_block ELSIF condition statement_block END\n                 | IF condition statement_block ELSIF condition statement_block ELSE statement_block ENDwhile_statement : WHILE condition statement_block ENDfor_statement : FOR NAME IN NAME DO statement_block ENDuntil_statement : UNTIL condition DO statement_block ENDcomparison : valor comparator valorstatement_block : statement\n                       | statement statement_block statement : variable_assignment\n                  | impresion\n                  | if_statement\n                  | while_statement\n                  | instantiation\n                  | returnreturn : RETURN argumentoscondition : comparison\n                 | boolean\n                 | NOT_OP comparison\n                 | comparison operatorCond comparisonoperatorCond : AND_OP\n                    | OR_OPcond : valor comparator valor\n            | LPAREN comparison RPARENclass_definition : CLASS CLASS_NAME class_body ENDfunction_definition : DEF NAME LPAREN arguments_opt RPAREN body ENDclass_body : empty\n                  | constructor_definition\n                  | class_body_element_listconstructor_definition : DEF INITIALIZE LPAREN parameters RPAREN body ENDclass_body_element_list : class_body_element\n                               | class_body_element class_body_element_listclass_body_element : variable_assignment\n                          | function_definition\n                          | function_def_no_paramsfunction_def_no_params : DEF NAME body END\n    instantiation : CLASS_NAME NEW LPAREN argumentos RPAREN\n    comparator : EQ\n                  | NE\n                  | LT\n                  | LE\n                  | GT\n                  | GEempty :\n    parameters : NAME\n               | NAME COMA parameters\n               | empty\n    \n    body : statement\n         | statement body\n    '
    
_lr_action_items = {'NAME':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,69,70,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,101,102,103,104,106,107,108,109,110,111,112,119,120,122,123,124,125,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,168,170,172,173,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,204,206,207,208,209,210,211,215,],[15,15,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,53,53,53,65,53,68,53,72,53,53,53,53,53,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,53,53,-89,53,113,-90,-37,113,113,-21,-28,-22,-23,-24,-25,53,53,-110,-111,-112,-113,-114,-115,142,-52,-53,-54,-55,-56,142,53,-93,-94,-91,113,-82,-83,-84,-85,-86,-87,53,53,164,113,53,53,170,113,-105,-106,-107,53,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,53,53,-59,-92,-72,113,53,142,142,142,142,142,142,-88,-76,-97,113,170,-31,113,-15,-48,-16,-17,-18,-19,-20,113,-78,-109,113,202,113,-27,-73,-108,-74,113,-77,-98,113,202,-75,]),'VARIABLE_GLOBAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,69,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,204,206,207,208,209,210,215,],[16,16,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,114,-90,-37,114,114,-21,-28,-22,-23,-24,-25,-91,114,-82,-83,-84,-85,-86,-87,-116,114,114,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,114,-88,-76,-97,114,-31,114,-15,-48,-16,-17,-18,-19,-20,114,-78,-109,114,114,-27,-73,-108,-74,114,-77,-98,114,-75,]),'VARIABLE_CLASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,69,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,204,206,207,208,209,210,215,],[17,17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,115,-90,-37,115,115,-21,-28,-22,-23,-24,-25,-91,115,-82,-83,-84,-85,-86,-87,-116,115,115,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,115,-88,-76,-97,115,-31,115,-15,-48,-16,-17,-18,-19,-20,115,-78,-109,115,115,-27,-73,-108,-74,115,-77,-98,115,-75,]),'VARIABLE_INSTANCIA':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,69,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,204,206,207,208,209,210,215,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,116,-90,-37,116,116,-21,-28,-22,-23,-24,-25,-91,116,-82,-83,-84,-85,-86,-87,-116,116,116,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,116,-88,-76,-97,116,-31,116,-15,-48,-16,-17,-18,-19,-20,116,-78,-109,116,116,-27,-73,-108,-74,116,-77,-98,116,-75,]),'VARIABLE_LOCAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,69,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,204,206,207,208,209,210,215,],[19,19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,117,-90,-37,117,117,-21,-28,-22,-23,-24,-25,-91,117,-82,-83,-84,-85,-86,-87,-116,117,117,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,117,-88,-76,-97,117,-31,117,-15,-48,-16,-17,-18,-19,-20,117,-78,-109,117,117,-27,-73,-108,-74,117,-77,-98,117,-75,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,206,207,208,209,210,215,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,119,-90,-37,119,-21,-28,-22,-23,-24,-25,-91,119,-82,-83,-84,-85,-86,-87,-116,119,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,119,-88,-76,-97,119,-31,119,-15,-48,-16,-17,-18,-19,-20,119,-78,-109,119,119,-27,-73,-74,119,-77,-98,119,-75,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,206,207,208,209,210,215,],[21,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,21,-90,-37,21,-21,-28,-22,-23,-24,-25,-91,21,-82,-83,-84,-85,-86,-87,-116,21,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,21,-88,-76,-97,21,-31,21,-15,-48,-16,-17,-18,-19,-20,21,-78,-109,21,21,-27,-73,-74,21,-77,-98,21,-75,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,206,207,208,209,210,215,],[22,22,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,22,-90,-37,22,-21,-28,-22,-23,-24,-25,-91,22,-82,-83,-84,-85,-86,-87,-116,22,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,22,-88,-76,-97,22,-31,22,-15,-48,-16,-17,-18,-19,-20,22,-78,-109,22,22,-27,-73,-74,22,-77,-98,22,-75,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,70,72,74,75,76,77,104,137,138,139,140,141,142,143,144,145,146,150,151,152,163,168,173,190,191,196,197,206,208,209,215,],[23,23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-21,-28,-22,-23,-24,-25,-91,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-76,-97,-31,-78,-109,-27,-73,-74,-77,-98,-75,]),'UNTIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,70,72,74,75,76,77,104,137,138,139,140,141,142,143,144,145,146,150,151,152,163,168,173,190,191,196,197,206,208,209,215,],[24,24,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-21,-28,-22,-23,-24,-25,-91,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-76,-97,-31,-78,-109,-27,-73,-74,-77,-98,-75,]),'CLASS_NAME':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,27,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,70,72,74,75,76,77,104,106,107,108,109,110,111,112,119,123,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,168,170,173,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,206,207,208,209,210,215,],[25,25,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,69,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,25,-90,-37,25,-21,-28,-22,-23,-24,-25,-91,25,-82,-83,-84,-85,-86,-87,-116,25,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,25,-88,-76,-97,25,-31,25,-15,-48,-16,-17,-18,-19,-20,25,-78,-109,25,25,-27,-73,-74,25,-77,-98,25,-75,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,69,70,72,74,75,76,77,104,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,163,168,173,182,183,184,185,186,187,188,190,191,196,197,204,206,208,209,215,],[26,26,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,130,-21,-28,-22,-23,-24,-25,-91,172,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-76,-97,-31,-15,-48,-16,-17,-18,-19,-20,-78,-109,-27,-73,-108,-74,-77,-98,-75,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,20,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,70,72,74,75,76,77,104,137,138,139,140,141,142,143,144,145,146,150,151,152,163,168,173,190,191,196,197,206,208,209,215,],[27,27,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-21,-28,-22,-23,-24,-25,-91,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-76,-97,-31,-78,-109,-27,-73,-74,-77,-98,-75,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,28,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,70,72,74,75,76,77,104,137,138,139,140,141,142,143,144,145,146,150,151,152,163,168,173,190,191,196,197,206,208,209,215,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-116,-3,-29,-30,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-21,-28,-22,-23,-24,-25,-91,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-76,-97,-31,-78,-109,-27,-73,-74,-77,-98,-75,]),'EQUALS':([15,16,17,18,19,113,114,115,116,117,118,],[29,32,33,34,35,156,157,158,159,160,161,]),'LPAREN':([15,53,67,68,72,169,170,],[31,31,124,125,136,193,125,]),'DOT':([15,53,71,],[30,30,135,]),'STRING':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,147,148,149,154,],[37,63,63,63,63,63,63,63,63,63,97,63,63,63,63,-110,-111,-112,-113,-114,-115,63,-93,-94,63,63,63,63,63,177,63,63,63,]),'NULL':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,148,149,154,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-110,-111,-112,-113,-114,-115,42,-93,-94,42,42,42,42,42,42,42,42,]),'SYMBOL':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,147,148,149,154,],[43,43,43,43,43,43,43,43,43,43,98,43,43,43,43,-110,-111,-112,-113,-114,-115,43,-93,-94,43,43,43,43,43,176,43,43,43,]),'INTEGER':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,101,102,103,119,120,124,125,136,148,149,154,156,157,158,159,160,161,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-110,-111,-112,-113,-114,-115,51,-52,-53,-54,-55,-56,51,51,-93,-94,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'FLOAT':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,101,102,103,119,120,124,125,136,148,149,154,156,157,158,159,160,161,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-110,-111,-112,-113,-114,-115,52,-52,-53,-54,-55,-56,52,52,-93,-94,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'TRUE':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,148,149,154,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-110,-111,-112,-113,-114,-115,54,-93,-94,54,54,54,54,54,54,54,54,]),'FALSE':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,148,149,154,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-110,-111,-112,-113,-114,-115,55,-93,-94,55,55,55,55,55,55,55,55,]),'LBRACKET':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,148,149,154,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-110,-111,-112,-113,-114,-115,56,-93,-94,56,56,56,56,56,56,56,56,]),'LSQBRACKET':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,148,149,154,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-110,-111,-112,-113,-114,-115,57,-93,-94,57,57,57,57,57,57,57,57,]),'NOT_OP':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,80,81,82,83,84,85,101,102,103,119,120,124,125,136,148,149,154,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-110,-111,-112,-113,-114,-115,59,-93,-94,59,59,59,59,59,59,59,59,]),'NEW':([25,],[67,]),'GETS':([29,],[71,]),'RPAREN':([31,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,73,104,125,136,137,138,139,140,141,142,143,144,145,146,150,151,166,167,174,193,196,201,202,203,211,214,],[-116,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-28,137,-91,-116,-116,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,191,192,196,-116,-27,210,-117,-119,-116,-118,]),'VARIABLE_CONSTANTE':([36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,69,72,104,106,107,108,109,110,111,112,119,123,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,170,181,182,183,184,185,186,187,188,189,191,192,195,196,197,204,206,207,209,210,215,],[-29,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,118,-90,-37,118,118,-28,-91,118,-82,-83,-84,-85,-86,-87,-116,118,118,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,118,-88,-76,118,118,-15,-48,-16,-17,-18,-19,-20,118,-109,118,118,-27,-73,-108,-74,118,-98,118,-75,]),'RETURN':([36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,72,104,106,107,108,109,110,111,112,119,123,137,138,139,140,141,142,143,144,145,146,150,151,152,153,162,163,170,181,182,183,184,185,186,187,188,189,191,192,195,196,197,206,207,210,215,],[-29,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,120,-90,-37,120,-28,-91,120,-82,-83,-84,-85,-86,-87,-116,120,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,120,-88,-76,120,120,-15,-48,-16,-17,-18,-19,-20,120,-109,120,120,-27,-73,-74,120,120,-75,]),'END':([36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,69,72,104,105,106,107,108,109,110,111,112,119,121,126,127,128,129,131,132,133,134,137,138,139,140,141,142,143,144,145,146,150,151,152,155,162,163,165,171,180,182,183,184,185,186,187,188,191,194,195,196,197,198,199,200,204,205,206,209,212,213,215,216,],[-29,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-116,-28,-91,152,-80,-82,-83,-84,-85,-86,-87,-116,163,168,-99,-100,-101,-103,-105,-106,-107,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-81,-88,-76,190,-104,197,-15,-48,-16,-17,-18,-19,-20,-109,204,-120,-27,-73,206,208,209,-108,-121,-74,-98,215,216,-75,-102,]),'ELSE':([36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,104,105,106,107,108,109,110,111,112,119,137,138,139,140,141,142,143,144,145,146,150,151,152,155,162,163,182,183,184,185,186,187,188,191,196,197,198,206,215,],[-29,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-28,-91,153,-80,-82,-83,-84,-85,-86,-87,-116,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-81,-88,-76,-15,-48,-16,-17,-18,-19,-20,-109,-27,-73,207,-74,-75,]),'ELSIF':([36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,104,105,106,107,108,109,110,111,112,119,137,138,139,140,141,142,143,144,145,146,150,151,152,155,162,163,182,183,184,185,186,187,188,191,196,197,206,215,],[-29,-32,-33,-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-28,-91,154,-80,-82,-83,-84,-85,-86,-87,-116,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-72,-81,-88,-76,-15,-48,-16,-17,-18,-19,-20,-109,-27,-73,-74,-75,]),'COMA':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,96,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,196,202,],[-37,78,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-28,147,-37,-39,-91,-26,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-64,-65,-27,211,]),'EQ':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,62,63,64,66,70,72,74,75,76,77,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,181,196,],[-37,80,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-43,-40,80,-37,-43,-43,80,-28,80,80,80,80,-37,-39,-89,-26,80,-70,-71,-51,-47,-58,-60,-61,-59,-89,80,80,-43,-27,]),'NE':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,62,63,64,66,70,72,74,75,76,77,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,181,196,],[-37,81,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-43,-40,81,-37,-43,-43,81,-28,81,81,81,81,-37,-39,-89,-26,81,-70,-71,-51,-47,-58,-60,-61,-59,-89,81,81,-43,-27,]),'LT':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,62,63,64,66,70,72,74,75,76,77,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,181,196,],[-37,82,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-43,-40,82,-37,-43,-43,82,-28,82,82,82,82,-37,-39,-89,-26,82,-70,-71,-51,-47,-58,-60,-61,-59,-89,82,82,-43,-27,]),'LE':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,62,63,64,66,70,72,74,75,76,77,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,181,196,],[-37,83,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-43,-40,83,-37,-43,-43,83,-28,83,83,83,83,-37,-39,-89,-26,83,-70,-71,-51,-47,-58,-60,-61,-59,-89,83,83,-43,-27,]),'GT':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,62,63,64,66,70,72,74,75,76,77,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,181,196,],[-37,84,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-43,-40,84,-37,-43,-43,84,-28,84,84,84,84,-37,-39,-89,-26,84,-70,-71,-51,-47,-58,-60,-61,-59,-89,84,84,-43,-27,]),'GE':([37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,62,63,64,66,70,72,74,75,76,77,97,98,104,137,139,140,141,142,143,144,145,146,150,151,178,179,181,196,],[-37,85,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-43,-40,85,-37,-43,-43,85,-28,85,85,85,85,-37,-39,-89,-26,85,-70,-71,-51,-47,-58,-60,-61,-59,-89,85,85,-43,-27,]),'RBRACKET':([40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,63,72,93,94,95,96,97,98,104,137,138,139,140,141,142,143,144,145,146,150,151,175,178,179,196,],[-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-116,-89,-37,-28,144,145,146,-62,-37,-39,-91,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-63,-64,-65,-27,]),'RSQBRACKET':([40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,100,104,137,138,139,140,141,142,143,144,145,146,150,151,196,],[-34,-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-37,-28,150,-91,-26,-35,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,-27,]),'AND_OP':([41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,104,137,139,140,141,142,143,144,145,146,150,151,196,],[-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,102,-37,-28,102,-26,-79,-70,-71,-51,-47,-58,-60,-61,-59,102,-27,]),'OR_OP':([41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,63,72,104,137,139,140,141,142,143,144,145,146,150,151,196,],[-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,103,-37,-28,103,-26,-79,-70,-71,-51,-47,-58,-60,-61,-59,103,-27,]),'DO':([41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,61,63,66,72,104,137,139,140,141,142,143,144,145,146,150,151,164,196,],[-36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-68,-69,-89,-90,-37,123,-28,-91,-26,-79,-70,-71,-51,-47,-58,-60,-61,-59,-92,189,-27,]),'PLUS':([41,48,51,52,53,140,142,143,182,183,184,185,186,187,188,],[87,87,-49,-50,-51,87,-51,-47,87,-48,87,87,87,87,87,]),'MINUS':([41,48,51,52,53,140,142,143,182,183,184,185,186,187,188,],[88,88,-49,-50,-51,88,-51,-47,88,-48,88,88,88,88,88,]),'MULTIPLY':([41,48,51,52,53,140,142,143,182,183,184,185,186,187,188,],[89,89,-49,-50,-51,89,-51,-47,89,-48,89,89,89,89,89,]),'DIVIDE':([41,48,51,52,53,140,142,143,182,183,184,185,186,187,188,],[90,90,-49,-50,-51,90,-51,-47,90,-48,90,90,90,90,90,]),'MODULE':([41,48,51,52,53,140,142,143,182,183,184,185,186,187,188,],[91,91,-49,-50,-51,91,-51,-47,91,-48,91,91,91,91,91,]),'IN':([65,],[122,]),'HASHROCKET':([97,98,99,176,177,],[-67,-66,148,-66,-67,]),'COLON':([97,98,99,176,177,],[-67,-66,149,-66,-67,]),'INITIALIZE':([130,],[169,]),'CHOMP':([135,],[173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'code_list':([0,3,],[2,28,]),'code':([0,3,],[3,3,]),'asignacion':([0,3,],[4,4,]),'impresion':([0,3,60,64,106,123,153,170,181,189,192,195,207,210,],[5,5,108,108,108,108,108,108,108,108,108,108,108,108,]),'if_statement':([0,3,60,64,106,123,153,170,181,189,192,195,207,210,],[6,6,109,109,109,109,109,109,109,109,109,109,109,109,]),'while_statement':([0,3,60,64,106,123,153,170,181,189,192,195,207,210,],[7,7,110,110,110,110,110,110,110,110,110,110,110,110,]),'for_statement':([0,3,],[8,8,]),'until_statement':([0,3,],[9,9,]),'instantiation':([0,3,60,64,106,123,153,170,181,189,192,195,207,210,],[10,10,111,111,111,111,111,111,111,111,111,111,111,111,]),'solicitud_entrada':([0,3,],[11,11,]),'call_expression':([0,3,20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[12,12,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'function_definition':([0,3,69,131,],[13,13,133,133,]),'class_definition':([0,3,],[14,14,]),'arguments_opt':([20,31,119,125,136,],[36,73,36,167,174,]),'argumentos':([20,31,56,57,78,119,120,124,125,136,],[38,38,93,100,138,38,162,166,38,38,]),'empty':([20,31,56,69,119,125,136,193,211,],[39,39,95,127,39,39,39,203,203,]),'valor':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[40,62,62,62,70,40,74,75,76,77,40,40,62,40,139,62,40,40,40,40,40,178,179,62,]),'operand':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,86,92,101,119,120,124,125,136,148,149,154,156,157,158,159,160,161,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,140,143,41,41,41,41,41,41,41,41,41,183,183,183,183,183,183,]),'boolean':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[44,61,61,61,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,61,]),'lists':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'operation':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,86,101,119,120,124,125,136,148,149,154,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,141,46,46,46,46,46,46,46,46,46,]),'condition':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[47,60,64,66,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,181,]),'expression':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,156,157,158,159,160,161,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,182,184,185,186,187,188,]),'hash':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'comparison':([20,21,22,24,29,31,32,33,34,35,56,57,59,78,79,101,119,120,124,125,136,148,149,154,],[58,58,58,58,58,58,58,58,58,58,58,58,104,58,58,151,58,58,58,58,58,58,58,58,]),'comparator':([40,62,70,74,75,76,77,139,178,179,],[79,79,79,79,79,79,79,79,79,79,]),'operatorArithm':([41,48,140,182,184,185,186,187,188,],[86,92,86,92,92,92,92,92,92,]),'pares_hash':([56,147,],[94,175,]),'par_hash':([56,147,],[96,96,]),'clave':([56,147,],[99,99,]),'operatorCond':([58,104,151,],[101,101,101,]),'statement_block':([60,64,106,123,153,181,189,207,],[105,121,155,165,180,198,199,212,]),'statement':([60,64,106,123,153,170,181,189,192,195,207,210,],[106,106,106,106,106,195,106,106,195,195,106,195,]),'variable_assignment':([60,64,69,106,123,131,153,170,181,189,192,195,207,210,],[107,107,132,107,107,132,107,107,107,107,107,107,107,107,]),'return':([60,64,106,123,153,170,181,189,192,195,207,210,],[112,112,112,112,112,112,112,112,112,112,112,112,]),'class_body':([69,],[126,]),'constructor_definition':([69,],[128,]),'class_body_element_list':([69,131,],[129,171,]),'class_body_element':([69,131,],[131,131,]),'function_def_no_params':([69,131,],[134,134,]),'body':([170,192,195,210,],[194,200,205,213,]),'parameters':([193,211,],[201,214,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code_list','program',1,'p_program','Syntactic.py',23),
  ('code_list -> code','code_list',1,'p_code_list','Syntactic.py',26),
  ('code_list -> code code_list','code_list',2,'p_code_list','Syntactic.py',27),
  ('code -> asignacion','code',1,'p_code','Syntactic.py',30),
  ('code -> impresion','code',1,'p_code','Syntactic.py',31),
  ('code -> if_statement','code',1,'p_code','Syntactic.py',32),
  ('code -> while_statement','code',1,'p_code','Syntactic.py',33),
  ('code -> for_statement','code',1,'p_code','Syntactic.py',34),
  ('code -> until_statement','code',1,'p_code','Syntactic.py',35),
  ('code -> instantiation','code',1,'p_code','Syntactic.py',36),
  ('code -> solicitud_entrada','code',1,'p_code','Syntactic.py',37),
  ('code -> call_expression','code',1,'p_code','Syntactic.py',38),
  ('code -> function_definition','code',1,'p_code','Syntactic.py',39),
  ('code -> class_definition','code',1,'p_code','Syntactic.py',40),
  ('variable_assignment -> NAME EQUALS expression','variable_assignment',3,'p_variable_assignment','Syntactic.py',43),
  ('variable_assignment -> VARIABLE_GLOBAL EQUALS expression','variable_assignment',3,'p_variable_assignment','Syntactic.py',44),
  ('variable_assignment -> VARIABLE_CLASE EQUALS expression','variable_assignment',3,'p_variable_assignment','Syntactic.py',45),
  ('variable_assignment -> VARIABLE_INSTANCIA EQUALS expression','variable_assignment',3,'p_variable_assignment','Syntactic.py',46),
  ('variable_assignment -> VARIABLE_LOCAL EQUALS expression','variable_assignment',3,'p_variable_assignment','Syntactic.py',47),
  ('variable_assignment -> VARIABLE_CONSTANTE EQUALS expression','variable_assignment',3,'p_variable_assignment','Syntactic.py',48),
  ('asignacion -> NAME EQUALS valor','asignacion',3,'p_asignacion','Syntactic.py',53),
  ('asignacion -> VARIABLE_GLOBAL EQUALS valor','asignacion',3,'p_asignacion','Syntactic.py',54),
  ('asignacion -> VARIABLE_CLASE EQUALS valor','asignacion',3,'p_asignacion','Syntactic.py',55),
  ('asignacion -> VARIABLE_INSTANCIA EQUALS valor','asignacion',3,'p_asignacion','Syntactic.py',56),
  ('asignacion -> VARIABLE_LOCAL EQUALS valor','asignacion',3,'p_asignacion','Syntactic.py',57),
  ('call_expression -> NAME LPAREN arguments_opt RPAREN','call_expression',4,'p_call_expresion','Syntactic.py',60),
  ('call_expression -> NAME DOT NAME LPAREN arguments_opt RPAREN','call_expression',6,'p_call_expresion','Syntactic.py',61),
  ('call_expression -> NAME DOT NAME','call_expression',3,'p_call_expresion','Syntactic.py',62),
  ('impresion -> PUTS arguments_opt','impresion',2,'p_impresion','Syntactic.py',66),
  ('solicitud_entrada -> PUTS STRING','solicitud_entrada',2,'p_solicitud_entrada','Syntactic.py',69),
  ('solicitud_entrada -> NAME EQUALS GETS DOT CHOMP','solicitud_entrada',5,'p_solicitud_entrada','Syntactic.py',70),
  ('arguments_opt -> argumentos','arguments_opt',1,'p_arguments_opt','Syntactic.py',74),
  ('arguments_opt -> empty','arguments_opt',1,'p_arguments_opt','Syntactic.py',75),
  ('argumentos -> valor','argumentos',1,'p_argumentos','Syntactic.py',78),
  ('argumentos -> valor COMA argumentos','argumentos',3,'p_argumentos','Syntactic.py',79),
  ('valor -> operand','valor',1,'p_valor','Syntactic.py',82),
  ('valor -> STRING','valor',1,'p_valor','Syntactic.py',83),
  ('valor -> NULL','valor',1,'p_valor','Syntactic.py',84),
  ('valor -> SYMBOL','valor',1,'p_valor','Syntactic.py',85),
  ('valor -> boolean','valor',1,'p_valor','Syntactic.py',86),
  ('valor -> lists','valor',1,'p_valor','Syntactic.py',87),
  ('valor -> operation','valor',1,'p_valor','Syntactic.py',88),
  ('valor -> condition','valor',1,'p_valor','Syntactic.py',89),
  ('valor -> expression','valor',1,'p_valor','Syntactic.py',90),
  ('valor -> hash','valor',1,'p_valor','Syntactic.py',91),
  ('valor -> call_expression','valor',1,'p_valor','Syntactic.py',92),
  ('expression -> expression operatorArithm operand','expression',3,'p_expression','Syntactic.py',95),
  ('expression -> operand','expression',1,'p_expression','Syntactic.py',96),
  ('operand -> INTEGER','operand',1,'p_operand','Syntactic.py',99),
  ('operand -> FLOAT','operand',1,'p_operand','Syntactic.py',100),
  ('operand -> NAME','operand',1,'p_operand','Syntactic.py',101),
  ('operatorArithm -> PLUS','operatorArithm',1,'p_operatorArithm','Syntactic.py',105),
  ('operatorArithm -> MINUS','operatorArithm',1,'p_operatorArithm','Syntactic.py',106),
  ('operatorArithm -> MULTIPLY','operatorArithm',1,'p_operatorArithm','Syntactic.py',107),
  ('operatorArithm -> DIVIDE','operatorArithm',1,'p_operatorArithm','Syntactic.py',108),
  ('operatorArithm -> MODULE','operatorArithm',1,'p_operatorArithm','Syntactic.py',109),
  ('power_op -> INTEGER POWER INTEGER','power_op',3,'p_power_op','Syntactic.py',114),
  ('lists -> LBRACKET argumentos RBRACKET','lists',3,'p_lists','Syntactic.py',117),
  ('lists -> LSQBRACKET argumentos RSQBRACKET','lists',3,'p_lists','Syntactic.py',118),
  ('hash -> LBRACKET pares_hash RBRACKET','hash',3,'p_hash','Syntactic.py',121),
  ('hash -> LBRACKET empty RBRACKET','hash',3,'p_hash','Syntactic.py',122),
  ('pares_hash -> par_hash','pares_hash',1,'p_pares_hash','Syntactic.py',125),
  ('pares_hash -> par_hash COMA pares_hash','pares_hash',3,'p_pares_hash','Syntactic.py',126),
  ('par_hash -> clave HASHROCKET valor','par_hash',3,'p_par_hash','Syntactic.py',129),
  ('par_hash -> clave COLON valor','par_hash',3,'p_par_hash','Syntactic.py',130),
  ('clave -> SYMBOL','clave',1,'p_clave','Syntactic.py',135),
  ('clave -> STRING','clave',1,'p_clave','Syntactic.py',136),
  ('boolean -> TRUE','boolean',1,'p_boolean','Syntactic.py',140),
  ('boolean -> FALSE','boolean',1,'p_boolean','Syntactic.py',141),
  ('operation -> operand operatorArithm operand','operation',3,'p_operation','Syntactic.py',145),
  ('operation -> operand operatorArithm operation','operation',3,'p_operation','Syntactic.py',146),
  ('if_statement -> IF condition statement_block END','if_statement',4,'p_if_statement','Syntactic.py',151),
  ('if_statement -> IF condition statement_block ELSE statement_block END','if_statement',6,'p_if_statement','Syntactic.py',152),
  ('if_statement -> IF condition statement_block ELSIF condition statement_block END','if_statement',7,'p_if_statement','Syntactic.py',153),
  ('if_statement -> IF condition statement_block ELSIF condition statement_block ELSE statement_block END','if_statement',9,'p_if_statement','Syntactic.py',154),
  ('while_statement -> WHILE condition statement_block END','while_statement',4,'p_while_statement','Syntactic.py',157),
  ('for_statement -> FOR NAME IN NAME DO statement_block END','for_statement',7,'p_for_statement','Syntactic.py',160),
  ('until_statement -> UNTIL condition DO statement_block END','until_statement',5,'p_until_statement','Syntactic.py',163),
  ('comparison -> valor comparator valor','comparison',3,'p_comparison','Syntactic.py',167),
  ('statement_block -> statement','statement_block',1,'p_statement_block','Syntactic.py',171),
  ('statement_block -> statement statement_block','statement_block',2,'p_statement_block','Syntactic.py',172),
  ('statement -> variable_assignment','statement',1,'p_statement','Syntactic.py',176),
  ('statement -> impresion','statement',1,'p_statement','Syntactic.py',177),
  ('statement -> if_statement','statement',1,'p_statement','Syntactic.py',178),
  ('statement -> while_statement','statement',1,'p_statement','Syntactic.py',179),
  ('statement -> instantiation','statement',1,'p_statement','Syntactic.py',180),
  ('statement -> return','statement',1,'p_statement','Syntactic.py',181),
  ('return -> RETURN argumentos','return',2,'p_return','Syntactic.py',184),
  ('condition -> comparison','condition',1,'p_condition','Syntactic.py',187),
  ('condition -> boolean','condition',1,'p_condition','Syntactic.py',188),
  ('condition -> NOT_OP comparison','condition',2,'p_condition','Syntactic.py',189),
  ('condition -> comparison operatorCond comparison','condition',3,'p_condition','Syntactic.py',190),
  ('operatorCond -> AND_OP','operatorCond',1,'p_operatorCond','Syntactic.py',193),
  ('operatorCond -> OR_OP','operatorCond',1,'p_operatorCond','Syntactic.py',194),
  ('cond -> valor comparator valor','cond',3,'p_cond','Syntactic.py',197),
  ('cond -> LPAREN comparison RPAREN','cond',3,'p_cond','Syntactic.py',198),
  ('class_definition -> CLASS CLASS_NAME class_body END','class_definition',4,'p_class_definition','Syntactic.py',201),
  ('function_definition -> DEF NAME LPAREN arguments_opt RPAREN body END','function_definition',7,'p_function_definition','Syntactic.py',204),
  ('class_body -> empty','class_body',1,'p_class_body','Syntactic.py',208),
  ('class_body -> constructor_definition','class_body',1,'p_class_body','Syntactic.py',209),
  ('class_body -> class_body_element_list','class_body',1,'p_class_body','Syntactic.py',210),
  ('constructor_definition -> DEF INITIALIZE LPAREN parameters RPAREN body END','constructor_definition',7,'p_constructor_definition','Syntactic.py',213),
  ('class_body_element_list -> class_body_element','class_body_element_list',1,'p_class_body_element_list','Syntactic.py',218),
  ('class_body_element_list -> class_body_element class_body_element_list','class_body_element_list',2,'p_class_body_element_list','Syntactic.py',219),
  ('class_body_element -> variable_assignment','class_body_element',1,'p_class_body_element','Syntactic.py',223),
  ('class_body_element -> function_definition','class_body_element',1,'p_class_body_element','Syntactic.py',224),
  ('class_body_element -> function_def_no_params','class_body_element',1,'p_class_body_element','Syntactic.py',225),
  ('function_def_no_params -> DEF NAME body END','function_def_no_params',4,'p_function_def_no_params','Syntactic.py',228),
  ('instantiation -> CLASS_NAME NEW LPAREN argumentos RPAREN','instantiation',5,'p_instantiation','Syntactic.py',233),
  ('comparator -> EQ','comparator',1,'p_comparator','Syntactic.py',237),
  ('comparator -> NE','comparator',1,'p_comparator','Syntactic.py',238),
  ('comparator -> LT','comparator',1,'p_comparator','Syntactic.py',239),
  ('comparator -> LE','comparator',1,'p_comparator','Syntactic.py',240),
  ('comparator -> GT','comparator',1,'p_comparator','Syntactic.py',241),
  ('comparator -> GE','comparator',1,'p_comparator','Syntactic.py',242),
  ('empty -> <empty>','empty',0,'p_empty','Syntactic.py',245),
  ('parameters -> NAME','parameters',1,'p_parameters','Syntactic.py',250),
  ('parameters -> NAME COMA parameters','parameters',3,'p_parameters','Syntactic.py',251),
  ('parameters -> empty','parameters',1,'p_parameters','Syntactic.py',252),
  ('body -> statement','body',1,'p_body','Syntactic.py',257),
  ('body -> statement body','body',2,'p_body','Syntactic.py',258),
]
